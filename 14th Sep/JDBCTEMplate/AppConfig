import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DriverManagerDataSource;

@Configuration
public class AppConfig {

	@Bean
	public JdbcTemplate createJdbcTemplate()
	{
		DriverManagerDataSource ds=new DriverManagerDataSource();
		ds.setDriverClassName("com.mysql.cj.jdbc.Driver");
		ds.setUrl("jdbc:mysql://localhost:3306/walmart2");
		ds.setUsername("root");
		ds.setPassword("Shreemb2004r");
		JdbcTemplate template=new JdbcTemplate();
		template.setDataSource(ds);
		return template;
	}
}
-----------------------------------------------------------------------------

App.class
-----------------------------------------------------------------------------
package com.unext.SpringJDBCTemplate;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.jdbc.core.JdbcTemplate;



import java.util.*;
/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
    	
    	
    	ApplicationContext ctx=new AnnotationConfigApplicationContext(AppConfig.class);
    	JdbcTemplate template=	ctx.getBean(JdbcTemplate.class);
    	
//        ApplicationContext ctx=new ClassPathXmlApplicationContext("beans.xml");
////   
//      JdbcTemplate template=ctx.getBean("jdbcTemplate1",JdbcTemplate.class);
    	
     //String sql="insert into book values(?,?,?,?)";
     // int result=template.update(sql,6,"C++","walmart",1300);
    // String sql="update book set price=? where bookname=?";
     //int result=template.update(sql,1000,"Spring");
    // String sql="delete from book  where bookname=?";
     // int result=template.update(sql,"Spring");
//   if(result>0)
//     {
//   	  System.out.println("insered");
//     }
      
   //  String sql2="select * from book ";
    // List<Book> b=template.query(sql2,new RowMapperObject() );
  // b.stream().forEach(System.out::println);
      String sql2="select * from book where bookname='C++' ";
     Book b=template.queryForObject(sql2,new RowMapperObject() );
     
  System.out.println(b);
 // int i=template.queryForObject("select count(*) from book",Integer.class);
 // System.out.println(i);
   
   
       
    }
}
